{"version":3,"file":"component---src-pages-index-tsx-debe8dba3a01468541ca.js","mappings":"kKAIA,MAAMA,EAAaC,EAAAA,QAAOC,KAAIC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAXJ,CAAW,oDAKxBK,EAAUL,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAATJ,CAAS,uEAMnBO,EAAWP,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAVJ,CAAU,uCAKrBS,EAAOT,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAVJ,CAAU,uBAIjBU,EAAUV,EAAAA,QAAOW,KAAIT,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAXJ,CAAW,qDAMrBY,EAAUZ,EAAAA,QAAOQ,IAAGN,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAVJ,CAAU,iCAoD1B,UA/CkBa,IAAc,IAAb,KAAEC,GAAMD,EAEzB,MAAME,EAAOD,EAAKE,QAAQC,MAAMC,KAAIC,GACpCC,EAAAA,cAACb,EAAQ,CAACc,IAAKF,EAAKG,IAClBF,EAAAA,cAACX,EAAI,KAAEU,EAAKI,KAAK,IAACH,EAAAA,cAACV,EAAO,KAAES,EAAKK,UAAWL,EAAKM,KAAK,MACtDL,EAAAA,cAACR,EAAO,KAAEO,EAAKO,MAAM,UACrBN,EAAAA,cAACR,EAAO,KAAEO,EAAKQ,SAIXC,EAAed,EAAKe,gBAAgBZ,MAAMC,KAAIC,GAClDC,EAAAA,cAACb,EAAQ,CAACc,IAAKF,EAAKG,IAClBF,EAAAA,cAACX,EAAI,KAAEU,EAAKI,KAAK,IAACH,EAAAA,cAACV,EAAO,KAAES,EAAKK,UAAU,OAC3CJ,EAAAA,cAACR,EAAO,KAAEO,EAAKW,UACfV,EAAAA,cAACR,EAAO,KAAEO,EAAKQ,SAIbI,EAASjB,EAAKkB,UAAUf,MAAMC,KAAIC,GACtCC,EAAAA,cAACb,EAAQ,CAACc,IAAKF,EAAKG,IAClBF,EAAAA,cAACX,EAAI,KAAEU,EAAKI,KAAK,IAACH,EAAAA,cAACV,EAAO,KAAES,EAAKK,UAAWL,EAAKM,OACjDL,EAAAA,cAACR,EAAO,KAAEO,EAAKQ,SAIbM,EAAQnB,EAAKoB,SAASjB,MAAMC,KAAIC,GACpCC,EAAAA,cAACb,EAAQ,CAACc,IAAKF,EAAKG,IAClBF,EAAAA,cAACX,EAAI,KAAEU,EAAKI,KAAK,IAACH,EAAAA,cAACV,EAAO,KAAES,EAAKK,UAAWL,EAAKM,OACjDL,EAAAA,cAACR,EAAO,KAAEO,EAAKQ,SAInB,OACEP,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAAA,aAAO,wBACPA,EAAAA,cAACf,EAAO,KAAC,QACRU,EACDK,EAAAA,cAACf,EAAO,KAAC,gBACRuB,EACDR,EAAAA,cAACf,EAAO,KAAC,UACR0B,EACDX,EAAAA,cAACf,EAAO,KAAC,SACR4B,EACU,C","sources":["webpack://brew-father-inventory/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst StyledMain = styled.main`\n  padding: 4rem;\n  font-family: Helvetica, sans-serif;\n`\n\nconst Heading = styled.h1`\n  color: #663399;\n  border-bottom: 1px solid #663399;\n  padding-bottom: 6px;\n`\n\nconst ListItem = styled.div`\n  color: #171717;\n  margin-bottom: 1rem;\n`\n\nconst Bold = styled.div`\n  font-weight: bold;\n`\n\nconst SubName = styled.span`\n  font-weight: 300;\n  opacity: .6;\n  padding-left: .25rem;\n`\n\nconst Content = styled.div`\n  font-weight: 300;\n  opacity: .6;\n`\n\nconst IndexPage = ({ data }) => {\n\n  const Hops = data.allHops.nodes.map(item => (\n  <ListItem key={item.id}>\n    <Bold>{item.name} <SubName>{item.inventory}{item.unit}g</SubName></Bold>\n    <Content>{item.alpha} alpha</Content>\n    <Content>{item.type}</Content>\n  </ListItem>\n  ))\n\n  const Fermentables = data.allFermentables.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}kg</SubName></Bold>\n      <Content>{item.supplier}</Content>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  const Yeasts = data.allYeasts.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}{item.unit}</SubName></Bold>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  const Miscs = data.allMiscs.nodes.map(item => (\n    <ListItem key={item.id}>\n      <Bold>{item.name} <SubName>{item.inventory}{item.unit}</SubName></Bold>\n      <Content>{item.type}</Content>\n    </ListItem>\n    ))\n\n  return (\n    <StyledMain>\n      <title>BrewFather Inventory</title>\n      <Heading>Hops</Heading>\n      {Hops}\n      <Heading>Fermentables</Heading>\n      {Fermentables}\n      <Heading>Yeasts</Heading>\n      {Yeasts}\n      <Heading>Miscs</Heading>\n      {Miscs}\n    </StyledMain>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query DataQuery {\n    allFermentables {\n      nodes {\n        name\n        inventory\n        supplier\n        type\n        id\n      }\n    }\n    allHops {\n      nodes {\n        name\n        type\n        use\n        alpha\n        id\n        inventory\n      }\n    }\n    allMiscs {\n      nodes {\n        inventory\n        name\n        type\n        use\n        id\n        unit\n      }\n    }\n    allYeasts {\n      nodes {\n        attenuation\n        id\n        inventory\n        name\n        type\n        unit\n      }\n    }\n  }\n`"],"names":["StyledMain","styled","main","withConfig","displayName","componentId","Heading","h1","ListItem","div","Bold","SubName","span","Content","_ref","data","Hops","allHops","nodes","map","item","React","key","id","name","inventory","unit","alpha","type","Fermentables","allFermentables","supplier","Yeasts","allYeasts","Miscs","allMiscs"],"sourceRoot":""}